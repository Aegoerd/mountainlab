#!/usr/bin/env node

function print_usage() {
	console.log ('kron_sort [algnames] [dsnames] --outpath=[output(default)]');
}

var fs=require('fs');
var common=require(__dirname+'/common.node.js');

var CLP=new common.CLParams(process.argv);

var algnames=CLP.unnamedParameters[0];
var dsnames=CLP.unnamedParameters[1];
var outpath=CLP.namedParameters.outpath||'output';
var alglist_path='alglist.txt';
var dslist_path='dslist.txt';

if ((!algnames)||(!dsnames)||(!outpath)||(!alglist_path)||(!dslist_path)) {
	print_usage();
	process.exit(-1);
}

common.mkdir_safe(outpath);

var algs=common.read_algs_from_text_file(alglist_path);
var datasets=common.read_datasets_from_text_file(dslist_path);

console.log(algs);
console.log(datasets);

for (var a in algs) {
	if (common.contains_alg(algnames,algs[a])) {
		for (var d in datasets) {
			if (common.contains_ds(dsnames,datasets[d])) {
				apply_sorting(algs[a],datasets[d]);
			}
		}
	}
}

common.wait_for_system_calls_to_finish(function() {

});

function apply_sorting(alg,ds,callback) {
	var outpath0=outpath+'/'+alg.name+'-'+ds.name;
	common.mkdir_safe(outpath0);

	var ds_folder=common.find_dataset_folder(ds.folder);
	var alg_script_path=common.find_algorithm_script(alg.script);

	if (!ds_folder) {
		console.log('Unable to find dataset: '+ds.folder);
		process.exit(-1);
	}
	if (!alg_script_path) {
		console.log('Unable to find algorithm script: '+alg.script);
		process.exit(-1);
	}

	common.copy_file_sync(ds_folder+'/firings_true.mda',outpath0+'/firings_true.mda');
	common.copy_file_sync(ds_folder+'/firings_true.mda.prv',outpath0+'/firings_true.mda.prv');

	var cmd='mountainprocess';
	args='queue-script '+alg_script_path;
	args+=' --raw='+ds_folder+'/raw.mda.prv';
	args+=' '+ds_folder+'/params.json';
	var geom_fname=ds_folder+'/geom.csv';
	if (fs.existsSync(geom_fname)) {
		args+=' --geom='+geom_fname;
	}
	if ('_force_run' in CLP.namedParameters) {
		args+=' --_force_run='+CLP.namedParameters['_force_run'];
	}
	args+=' --outpath='+outpath0;
	var arguments0=alg.arguments.split(' ');
	for (var i in arguments0) {
		args+=' '+arguments0[i];
	}
	args=args.split(' ');
	common.make_system_call(cmd,args,function() {
		if (callback) callback();
	});
}


